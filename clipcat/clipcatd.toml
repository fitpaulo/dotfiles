# run as a traditional UNIX daemon
daemonize = true
# maximum number of clip history
max_history = 50
# file path of clip history,
# if you omit this value, clipcatd will persist history in `$XDG_CACHE_HOME/clipcat/clipcatd-history`
# history_file_path = "/home/<username>/.cache/clipcat/clipcatd-history"
# file path of PID file,
# if you omit this value, clipcatd will place the PID file on `$XDG_RUNTIME_DIR/clipcatd.pid`
# pid_file = "/run/user/<user-id>/clipcatd.pid"

[log]
# emit log message to a log file.
# if you omit this value, clipcatd will disable emitting to a log file
# file_path = "/path/to/log/file"
# emit log message to journald
emit_journald = true
# emit log message to stdout
emit_stdout = false
# emit log message to stderr
emit_stderr = false
# log level
level = "INFO"

[watcher]
# load current clipboard content at startup
load_current = true
# enable watching X11/Wayland clipboard selection
enable_clipboard = true
# enable watching X11/Wayland primary selection
enable_primary = true
# ignore clips which match with one of the X11 `TARGETS`
sensitive_x11_atoms = ["x-kde-passwordManagerHint"]
# ignore text clips which match with one of the regular expressions
# the regular expression engine is powered by https://github.com/rust-lang/regex
denied_text_regex_patterns = []
# ignore text clips with a length <= `filter_text_min_length`, in characters (Unicode scalar value), not in byte
filter_text_min_length = 1
# ignore text clips with a length > `filter_text_max_length`, in characters (Unicode scalar value), not in byte
filter_text_max_length = 20000000
# enable capturing image or not
capture_image = true
# ignore image clips with a size > `filter_image_max_size`, in byte
filter_image_max_size = 5242880

[grpc]
# enable gRPC over http
enable_http = true
# enable gRPC over unix domain socket
enable_local_socket = true
# host address for gRPC
host = "127.0.0.1"
# port number for gRPC
port = 45045
# path of unix domain socket
# if you omit this value, clipcatd will place the socket on `$XDG_RUNTIME_DIR/clipcat/grpc.sock`
# local_socket = "/run/user/<user-id>/clipcat/grpc.sock"

[desktop_notification]
# enable desktop notification
enable = true
# path of a icon, the given icon will be displayed on desktop notification,
# if your desktop notification server supports showing a icon
# if not provided, the value `accessories-clipboard` will be applied
# icon = "/path/to/the/icon"
# timeout duration in milliseconds
# this sets the time from the time the notification is displayed until it is
# closed again by the notification server
timeout_ms = 2000
# define the length of a long plaintext,
# if the length of a plaintext is >= `long_plaintext_length`,
# desktop notification will be emitted
# if this value is 0, no desktop desktop notification will be emitted when fetched plaintext
long_plaintext_length = 2000
